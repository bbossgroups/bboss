A. bool-true Value java.lang.Boolean true
  boolean ok: true
  byte ok: 1
  short ok: 1
  int ok: 1
  long ok: 1
  $target.integralFloat($value)
  $target.integralDouble($value)
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 1
  Short ok: 1
  Integer ok: 1
  Long ok: 1
  $target.objectBigInteger($value)
  $target.objectFloat($value)
  $target.objectDouble($value)
  $target.objectBigDecimal($value)
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: true
  $target.objectEnum($value)
  String ok: true
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
B. bool-false Value java.lang.Boolean false
  boolean ok: false
  byte ok: 0
  short ok: 0
  int ok: 0
  long ok: 0
  $target.integralFloat($value)
  $target.integralDouble($value)
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 0
  Short ok: 0
  Integer ok: 0
  Long ok: 0
  $target.objectBigInteger($value)
  $target.objectFloat($value)
  $target.objectDouble($value)
  $target.objectBigDecimal($value)
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: false
  $target.objectEnum($value)
  String ok: false
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
C. byte-0 Value java.lang.Byte 0
  boolean ok: false
  byte ok: 0
  short ok: 0
  int ok: 0
  long ok: 0
  float ok: 0.0
  double ok: 0.0
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 0
  Short ok: 0
  Integer ok: 0
  Long ok: 0
  BigInteger ok: 0
  Float ok: 0.0
  Double ok: 0.0
  BigDecimal ok: 0
  $target.objectCharacter($value)
  Number ok: 0
  Object ok: 0
  $target.objectEnum($value)
  String ok: 0
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
D. byte-1 Value java.lang.Byte 1
  boolean ok: true
  byte ok: 1
  short ok: 1
  int ok: 1
  long ok: 1
  float ok: 1.0
  double ok: 1.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 1
  Short ok: 1
  Integer ok: 1
  Long ok: 1
  BigInteger ok: 1
  Float ok: 1.0
  Double ok: 1.0
  BigDecimal ok: 1
  $target.objectCharacter($value)
  Number ok: 1
  Object ok: 1
  $target.objectEnum($value)
  String ok: 1
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
E. short Value java.lang.Short 125
  boolean ok: true
  byte ok: 125
  short ok: 125
  int ok: 125
  long ok: 125
  float ok: 125.0
  double ok: 125.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 125
  Short ok: 125
  Integer ok: 125
  Long ok: 125
  BigInteger ok: 125
  Float ok: 125.0
  Double ok: 125.0
  BigDecimal ok: 125
  $target.objectCharacter($value)
  Number ok: 125
  Object ok: 125
  $target.objectEnum($value)
  String ok: 125
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
F. int Value java.lang.Integer 24323
  boolean ok: true
  integralByte -> NumberFormatException: value out of range: 24323
  short ok: 24323
  int ok: 24323
  long ok: 24323
  float ok: 24323.0
  double ok: 24323.0
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> NumberFormatException: value out of range: 24323
  Short ok: 24323
  Integer ok: 24323
  Long ok: 24323
  BigInteger ok: 24323
  Float ok: 24323.0
  Double ok: 24323.0
  BigDecimal ok: 24323
  $target.objectCharacter($value)
  Number ok: 24323
  Object ok: 24323
  $target.objectEnum($value)
  String ok: 24323
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
G. long Value java.lang.Long 5235235
  boolean ok: true
  integralByte -> NumberFormatException: value out of range: 5235235
  integralShort -> NumberFormatException: value out of range: 5235235
  int ok: 5235235
  long ok: 5235235
  float ok: 5235235.0
  double ok: 5235235.0
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> NumberFormatException: value out of range: 5235235
  objectShort -> NumberFormatException: value out of range: 5235235
  Integer ok: 5235235
  Long ok: 5235235
  BigInteger ok: 5235235
  Float ok: 5235235.0
  Double ok: 5235235.0
  BigDecimal ok: 5235235
  $target.objectCharacter($value)
  Number ok: 5235235
  Object ok: 5235235
  $target.objectEnum($value)
  String ok: 5235235
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
H. float Value java.lang.Float 34523.344
  boolean ok: true
  integralByte -> NumberFormatException: value out of range: 34523.344
  integralShort -> NumberFormatException: value out of range: 34523.344
  int ok: 34523
  long ok: 34523
  float ok: 34523.344
  double ok: 34523.34375
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> NumberFormatException: value out of range: 34523.344
  objectShort -> NumberFormatException: value out of range: 34523.344
  Integer ok: 34523
  Long ok: 34523
  $target.objectBigInteger($value)
  Float ok: 34523.344
  Double ok: 34523.34375
  BigDecimal ok: 34523.34375
  $target.objectCharacter($value)
  Number ok: 34523.344
  Object ok: 34523.344
  $target.objectEnum($value)
  String ok: 34523.344
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
I. double Value java.lang.Double 54235.3253
  boolean ok: true
  integralByte -> NumberFormatException: value out of range: 54235.3253
  integralShort -> NumberFormatException: value out of range: 54235.3253
  int ok: 54235
  long ok: 54235
  float ok: 54235.324
  double ok: 54235.3253
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> NumberFormatException: value out of range: 54235.3253
  objectShort -> NumberFormatException: value out of range: 54235.3253
  Integer ok: 54235
  Long ok: 54235
  $target.objectBigInteger($value)
  Float ok: 54235.324
  Double ok: 54235.3253
  BigDecimal ok: 54235.3253
  $target.objectCharacter($value)
  Number ok: 54235.3253
  Object ok: 54235.3253
  $target.objectEnum($value)
  String ok: 54235.3253
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
J. char Value java.lang.Character @
  boolean ok: true
  $target.integralByte($value)
  $target.integralShort($value)
  $target.integralInt($value)
  $target.integralLong($value)
  $target.integralFloat($value)
  $target.integralDouble($value)
  char ok: @
  Boolean ok: true
  $target.objectByte($value)
  $target.objectShort($value)
  $target.objectInt($value)
  $target.objectLong($value)
  $target.objectBigInteger($value)
  $target.objectFloat($value)
  $target.objectDouble($value)
  $target.objectBigDecimal($value)
  Character ok: @
  $target.objectNumber($value)
  Object ok: @
  $target.objectEnum($value)
  String ok: @
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
K. object Value org.apache.velocity.test.util.introspection.ConversionHandlerTestCase$Obj instance of Obj
  $target.integralBoolean($value)
  $target.integralByte($value)
  $target.integralShort($value)
  $target.integralInt($value)
  $target.integralLong($value)
  $target.integralFloat($value)
  $target.integralDouble($value)
  $target.integralChar($value)
  $target.objectBoolean($value)
  $target.objectByte($value)
  $target.objectShort($value)
  $target.objectInt($value)
  $target.objectLong($value)
  $target.objectBigInteger($value)
  $target.objectFloat($value)
  $target.objectDouble($value)
  $target.objectBigDecimal($value)
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: instance of Obj
  $target.objectEnum($value)
  String ok: instance of Obj
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
L. enum Value org.apache.velocity.test.util.introspection.ConversionHandlerTestCase$Obj$Color GREEN
  $target.integralBoolean($value)
  $target.integralByte($value)
  $target.integralShort($value)
  $target.integralInt($value)
  $target.integralLong($value)
  $target.integralFloat($value)
  $target.integralDouble($value)
  $target.integralChar($value)
  $target.objectBoolean($value)
  $target.objectByte($value)
  $target.objectShort($value)
  $target.objectInt($value)
  $target.objectLong($value)
  $target.objectBigInteger($value)
  $target.objectFloat($value)
  $target.objectDouble($value)
  $target.objectBigDecimal($value)
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: GREEN
  Enum ok: GREEN
  String ok: GREEN
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
M. string Value java.lang.String foo
  boolean ok: false
  integralByte -> NumberFormatException: For input string: "foo"
  integralShort -> NumberFormatException: For input string: "foo"
  integralInt -> NumberFormatException: For input string: "foo"
  integralLong -> NumberFormatException: For input string: "foo"
  integralFloat -> NumberFormatException: For input string: "foo"
  integralDouble -> NumberFormatException: For input string: "foo"
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: "foo"
  objectShort -> NumberFormatException: For input string: "foo"
  objectInt -> NumberFormatException: For input string: "foo"
  objectLong -> NumberFormatException: For input string: "foo"
  objectBigInteger -> NumberFormatException: For input string: "foo"
  objectFloat -> NumberFormatException: For input string: "foo"
  objectDouble -> NumberFormatException: For input string: "foo"
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: foo
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.foo
  String ok: foo
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  Locale ok: foo
M. string-green Value java.lang.String green
  boolean ok: false
  integralByte -> NumberFormatException: For input string: "green"
  integralShort -> NumberFormatException: For input string: "green"
  integralInt -> NumberFormatException: For input string: "green"
  integralLong -> NumberFormatException: For input string: "green"
  integralFloat -> NumberFormatException: For input string: "green"
  integralDouble -> NumberFormatException: For input string: "green"
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: "green"
  objectShort -> NumberFormatException: For input string: "green"
  objectInt -> NumberFormatException: For input string: "green"
  objectLong -> NumberFormatException: For input string: "green"
  objectBigInteger -> NumberFormatException: For input string: "green"
  objectFloat -> NumberFormatException: For input string: "green"
  objectDouble -> NumberFormatException: For input string: "green"
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: green
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.green
  String ok: green
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: green
N. string-empty Value java.lang.String 
  boolean ok: false
  integralByte -> NumberFormatException: For input string: ""
  integralShort -> NumberFormatException: For input string: ""
  integralInt -> NumberFormatException: For input string: ""
  integralLong -> NumberFormatException: For input string: ""
  integralFloat -> NumberFormatException: empty String
  integralDouble -> NumberFormatException: empty String
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: ""
  objectShort -> NumberFormatException: For input string: ""
  objectInt -> NumberFormatException: For input string: ""
  objectLong -> NumberFormatException: For input string: ""
  objectBigInteger -> NumberFormatException: Zero length BigInteger
  objectFloat -> NumberFormatException: empty String
  objectDouble -> NumberFormatException: empty String
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: 
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.
  String ok: 
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  Locale ok: 
O. string-false Value java.lang.String false
  boolean ok: false
  integralByte -> NumberFormatException: For input string: "false"
  integralShort -> NumberFormatException: For input string: "false"
  integralInt -> NumberFormatException: For input string: "false"
  integralLong -> NumberFormatException: For input string: "false"
  integralFloat -> NumberFormatException: For input string: "false"
  integralDouble -> NumberFormatException: For input string: "false"
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: "false"
  objectShort -> NumberFormatException: For input string: "false"
  objectInt -> NumberFormatException: For input string: "false"
  objectLong -> NumberFormatException: For input string: "false"
  objectBigInteger -> NumberFormatException: For input string: "false"
  objectFloat -> NumberFormatException: For input string: "false"
  objectDouble -> NumberFormatException: For input string: "false"
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: false
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.false
  String ok: false
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: false
P. string-true Value java.lang.String true
  boolean ok: true
  integralByte -> NumberFormatException: For input string: "true"
  integralShort -> NumberFormatException: For input string: "true"
  integralInt -> NumberFormatException: For input string: "true"
  integralLong -> NumberFormatException: For input string: "true"
  integralFloat -> NumberFormatException: For input string: "true"
  integralDouble -> NumberFormatException: For input string: "true"
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> NumberFormatException: For input string: "true"
  objectShort -> NumberFormatException: For input string: "true"
  objectInt -> NumberFormatException: For input string: "true"
  objectLong -> NumberFormatException: For input string: "true"
  objectBigInteger -> NumberFormatException: For input string: "true"
  objectFloat -> NumberFormatException: For input string: "true"
  objectDouble -> NumberFormatException: For input string: "true"
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: true
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.true
  String ok: true
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: true
Q. string-zero Value java.lang.String 0
  boolean ok: false
  byte ok: 0
  short ok: 0
  int ok: 0
  long ok: 0
  float ok: 0.0
  double ok: 0.0
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 0
  Short ok: 0
  Integer ok: 0
  Long ok: 0
  BigInteger ok: 0
  Float ok: 0.0
  Double ok: 0.0
  BigDecimal ok: 0
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: 0
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.0
  String ok: 0
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: 0
R. string-integral Value java.lang.String 123
  boolean ok: false
  byte ok: 123
  short ok: 123
  int ok: 123
  long ok: 123
  float ok: 123.0
  double ok: 123.0
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 123
  Short ok: 123
  Integer ok: 123
  Long ok: 123
  BigInteger ok: 123
  Float ok: 123.0
  Double ok: 123.0
  BigDecimal ok: 123
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: 123
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.123
  String ok: 123
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: 123
S. string-big-integral Value java.lang.String 12345678
  boolean ok: false
  integralByte -> NumberFormatException: Value out of range. Value:"12345678" Radix:10
  integralShort -> NumberFormatException: Value out of range. Value:"12345678" Radix:10
  int ok: 12345678
  long ok: 12345678
  float ok: 1.2345678E7
  double ok: 1.2345678E7
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: Value out of range. Value:"12345678" Radix:10
  objectShort -> NumberFormatException: Value out of range. Value:"12345678" Radix:10
  Integer ok: 12345678
  Long ok: 12345678
  BigInteger ok: 12345678
  Float ok: 1.2345678E7
  Double ok: 1.2345678E7
  BigDecimal ok: 12345678
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: 12345678
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.12345678
  String ok: 12345678
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: 12345678
T. string-floating Value java.lang.String 123.345
  boolean ok: false
  integralByte -> NumberFormatException: For input string: "123.345"
  integralShort -> NumberFormatException: For input string: "123.345"
  integralInt -> NumberFormatException: For input string: "123.345"
  integralLong -> NumberFormatException: For input string: "123.345"
  float ok: 123.345
  double ok: 123.345
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: "123.345"
  objectShort -> NumberFormatException: For input string: "123.345"
  objectInt -> NumberFormatException: For input string: "123.345"
  objectLong -> NumberFormatException: For input string: "123.345"
  objectBigInteger -> NumberFormatException: For input string: "123.345"
  Float ok: 123.345
  Double ok: 123.345
  BigDecimal ok: 123.345
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: 123.345
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.123.345
  String ok: 123.345
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  locale -> IllegalArgumentException: Invalid locale format: 123.345
U. null Value $value.class.name $value
  $target.integralBoolean($value)
  $target.integralByte($value)
  $target.integralShort($value)
  $target.integralInt($value)
  $target.integralLong($value)
  $target.integralFloat($value)
  $target.integralDouble($value)
  $target.integralChar($value)
  Boolean ok: null
  Byte ok: null
  Short ok: null
  Integer ok: null
  Long ok: null
  BigInteger ok: null
  Float ok: null
  Double ok: null
  BigDecimal ok: null
  Character ok: null
  Number ok: null
  Object ok: null
  Enum ok: null
  String ok: null
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  Locale ok: null
V. locale Value java.lang.String fr_FR
  boolean ok: false
  integralByte -> NumberFormatException: For input string: "fr_FR"
  integralShort -> NumberFormatException: For input string: "fr_FR"
  integralInt -> NumberFormatException: For input string: "fr_FR"
  integralLong -> NumberFormatException: For input string: "fr_FR"
  integralFloat -> NumberFormatException: For input string: "fr_FR"
  integralDouble -> NumberFormatException: For input string: "fr_FR"
  $target.integralChar($value)
  Boolean ok: false
  objectByte -> NumberFormatException: For input string: "fr_FR"
  objectShort -> NumberFormatException: For input string: "fr_FR"
  objectInt -> NumberFormatException: For input string: "fr_FR"
  objectLong -> NumberFormatException: For input string: "fr_FR"
  objectBigInteger -> NumberFormatException: For input string: "fr_FR"
  objectFloat -> NumberFormatException: For input string: "fr_FR"
  objectDouble -> NumberFormatException: For input string: "fr_FR"
  objectBigDecimal -> NumberFormatException: null
  $target.objectCharacter($value)
  $target.objectNumber($value)
  Object ok: fr_FR
  objectEnum -> IllegalArgumentException: No enum constant org.apache.velocity.test.util.introspection.ConversionHandlerTestCase.Obj.Color.fr_FR
  String ok: fr_FR
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  Locale ok: fr_FR
W. BigInteger zero Value java.math.BigInteger 0
  boolean ok: false
  byte ok: 0
  short ok: 0
  int ok: 0
  long ok: 0
  float ok: 0.0
  double ok: 0.0
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 0
  Short ok: 0
  Integer ok: 0
  Long ok: 0
  BigInteger ok: 0
  Float ok: 0.0
  Double ok: 0.0
  BigDecimal ok: 0
  $target.objectCharacter($value)
  Number ok: 0
  Object ok: 0
  $target.objectEnum($value)
  String ok: 0
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
X. BigInteger one Value java.math.BigInteger 1
  boolean ok: true
  byte ok: 1
  short ok: 1
  int ok: 1
  long ok: 1
  float ok: 1.0
  double ok: 1.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 1
  Short ok: 1
  Integer ok: 1
  Long ok: 1
  BigInteger ok: 1
  Float ok: 1.0
  Double ok: 1.0
  BigDecimal ok: 1
  $target.objectCharacter($value)
  Number ok: 1
  Object ok: 1
  $target.objectEnum($value)
  String ok: 1
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
Y. BigInteger bigint Value java.math.BigInteger 12345678901234567890
  boolean ok: true
  integralByte -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of byte range
  integralShort -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of short range
  integralInt -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of int range
  integralLong -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of long range
  float ok: 1.2345679E19
  double ok: 1.2345678901234567E19
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of byte range
  objectShort -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of short range
  objectInt -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of int range
  objectLong -> IllegalArgumentException: java.lang.ArithmeticException: BigInteger out of long range
  BigInteger ok: 12345678901234567890
  Float ok: 1.2345679E19
  Double ok: 1.2345678901234567E19
  BigDecimal ok: 12345678901234567890
  $target.objectCharacter($value)
  Number ok: 12345678901234567890
  Object ok: 12345678901234567890
  $target.objectEnum($value)
  String ok: 12345678901234567890
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
Y. BigInteger ten Value java.math.BigInteger 10
  boolean ok: true
  byte ok: 10
  short ok: 10
  int ok: 10
  long ok: 10
  float ok: 10.0
  double ok: 10.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 10
  Short ok: 10
  Integer ok: 10
  Long ok: 10
  BigInteger ok: 10
  Float ok: 10.0
  Double ok: 10.0
  BigDecimal ok: 10
  $target.objectCharacter($value)
  Number ok: 10
  Object ok: 10
  $target.objectEnum($value)
  String ok: 10
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
Z. BigDecimal zero Value java.math.BigDecimal 0
  boolean ok: false
  byte ok: 0
  short ok: 0
  int ok: 0
  long ok: 0
  float ok: 0.0
  double ok: 0.0
  $target.integralChar($value)
  Boolean ok: false
  Byte ok: 0
  Short ok: 0
  Integer ok: 0
  Long ok: 0
  BigInteger ok: 0
  Float ok: 0.0
  Double ok: 0.0
  BigDecimal ok: 0
  $target.objectCharacter($value)
  Number ok: 0
  Object ok: 0
  $target.objectEnum($value)
  String ok: 0
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
ZA. BigDecimal one Value java.math.BigDecimal 1
  boolean ok: true
  byte ok: 1
  short ok: 1
  int ok: 1
  long ok: 1
  float ok: 1.0
  double ok: 1.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 1
  Short ok: 1
  Integer ok: 1
  Long ok: 1
  BigInteger ok: 1
  Float ok: 1.0
  Double ok: 1.0
  BigDecimal ok: 1
  $target.objectCharacter($value)
  Number ok: 1
  Object ok: 1
  $target.objectEnum($value)
  String ok: 1
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
ZB. BigDecimal ten Value java.math.BigDecimal 10
  boolean ok: true
  byte ok: 10
  short ok: 10
  int ok: 10
  long ok: 10
  float ok: 10.0
  double ok: 10.0
  $target.integralChar($value)
  Boolean ok: true
  Byte ok: 10
  Short ok: 10
  Integer ok: 10
  Long ok: 10
  BigInteger ok: 10
  Float ok: 10.0
  Double ok: 10.0
  BigDecimal ok: 10
  $target.objectCharacter($value)
  Number ok: 10
  Object ok: 10
  $target.objectEnum($value)
  String ok: 10
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
ZC. BigDecimal bigdec Value java.math.BigDecimal 12345678901234567890.01234567890123456789
  boolean ok: true
  integralByte -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  integralShort -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  integralInt -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  integralLong -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  float ok: 1.2345679E19
  double ok: 1.2345678901234567E19
  $target.integralChar($value)
  Boolean ok: true
  objectByte -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  objectShort -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  objectInt -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  objectLong -> IllegalArgumentException: java.lang.ArithmeticException: Overflow
  objectBigInteger -> IllegalArgumentException: java.lang.ArithmeticException: Rounding necessary
  Float ok: 1.2345679E19
  Double ok: 1.2345678901234567E19
  BigDecimal ok: 12345678901234567890.01234567890123456789
  $target.objectCharacter($value)
  Number ok: 12345678901234567890.01234567890123456789
  Object ok: 12345678901234567890.01234567890123456789
  $target.objectEnum($value)
  String ok: 12345678901234567890.01234567890123456789
  $target.valueOfBoolean($value)
  $target.valueOfShort($value)
  $target.valueOfByte($value)
  $target.valueOfInt($value)
  $target.valueOfLong($value)
  $target.valueOfFloat($value)
  $target.valueOfDouble($value)
  $target.valueOfString($value)
  $target.locale($value)
